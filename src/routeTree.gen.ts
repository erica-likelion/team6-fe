/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UserIndexRouteImport } from './routes/user/index'
import { Route as MartIndexRouteImport } from './routes/mart/index'
import { Route as ListIndexRouteImport } from './routes/list/index'
import { Route as HomeIndexRouteImport } from './routes/home/index'
import { Route as DivisionIndexRouteImport } from './routes/division/index'
import { Route as ChatIndexRouteImport } from './routes/chat/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserIndexRoute = UserIndexRouteImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => rootRouteImport,
} as any)
const MartIndexRoute = MartIndexRouteImport.update({
  id: '/mart/',
  path: '/mart/',
  getParentRoute: () => rootRouteImport,
} as any)
const ListIndexRoute = ListIndexRouteImport.update({
  id: '/list/',
  path: '/list/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => rootRouteImport,
} as any)
const DivisionIndexRoute = DivisionIndexRouteImport.update({
  id: '/division/',
  path: '/division/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatIndexRoute = ChatIndexRouteImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chat': typeof ChatIndexRoute
  '/division': typeof DivisionIndexRoute
  '/home': typeof HomeIndexRoute
  '/list': typeof ListIndexRoute
  '/mart': typeof MartIndexRoute
  '/user': typeof UserIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/chat': typeof ChatIndexRoute
  '/division': typeof DivisionIndexRoute
  '/home': typeof HomeIndexRoute
  '/list': typeof ListIndexRoute
  '/mart': typeof MartIndexRoute
  '/user': typeof UserIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/chat/': typeof ChatIndexRoute
  '/division/': typeof DivisionIndexRoute
  '/home/': typeof HomeIndexRoute
  '/list/': typeof ListIndexRoute
  '/mart/': typeof MartIndexRoute
  '/user/': typeof UserIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/chat' | '/division' | '/home' | '/list' | '/mart' | '/user'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/chat' | '/division' | '/home' | '/list' | '/mart' | '/user'
  id:
    | '__root__'
    | '/'
    | '/chat/'
    | '/division/'
    | '/home/'
    | '/list/'
    | '/mart/'
    | '/user/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChatIndexRoute: typeof ChatIndexRoute
  DivisionIndexRoute: typeof DivisionIndexRoute
  HomeIndexRoute: typeof HomeIndexRoute
  ListIndexRoute: typeof ListIndexRoute
  MartIndexRoute: typeof MartIndexRoute
  UserIndexRoute: typeof UserIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/': {
      id: '/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mart/': {
      id: '/mart/'
      path: '/mart'
      fullPath: '/mart'
      preLoaderRoute: typeof MartIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/list/': {
      id: '/list/'
      path: '/list'
      fullPath: '/list'
      preLoaderRoute: typeof ListIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/division/': {
      id: '/division/'
      path: '/division'
      fullPath: '/division'
      preLoaderRoute: typeof DivisionIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat/': {
      id: '/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChatIndexRoute: ChatIndexRoute,
  DivisionIndexRoute: DivisionIndexRoute,
  HomeIndexRoute: HomeIndexRoute,
  ListIndexRoute: ListIndexRoute,
  MartIndexRoute: MartIndexRoute,
  UserIndexRoute: UserIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
